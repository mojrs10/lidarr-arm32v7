permissions:
  contents: write
  pull-requests: write
  issues: write
  discussions: write

name: Auto Build Lidarr

on:
  workflow_dispatch:
  schedule:
    - cron: '45 5 * * *'  # svakodnevno u 05:45 UTC

env:
  PLATFORM: linux/arm/v7
  IMAGE_NAME: mojrapid/lidarr
  ARCH_TAG: arm32v7

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run fix-permissions.sh
        run: |
          bash ./fix-permissions.sh

      - name: Get latest Lidarr version from GitHub
        id: get_version
        run: |
          version=$(curl -s https://api.github.com/repos/Lidarr/Lidarr/releases/latest | jq -r '.tag_name')
          if [ -z "$version" ]; then
            echo "Failed to fetch Lidarr version."
            exit 1
          fi
          echo "Lidarr version fetched: $version"
          echo "LIDARR_VERSION=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.10.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check if image already exists
        id: check_image
        run: |
          image_tag="${{ env.IMAGE_NAME }}:${{ env.ARCH_TAG }}-${{ env.LIDARR_VERSION }}"
          image_exists=$(docker manifest inspect $image_tag || echo "not found")
          if [[ $image_exists == *"not found"* ]]; then
            echo "Image not found. Proceeding with build."
            echo "image_exists=false" >> $GITHUB_ENV
          else
            echo "Image found. Skipping build."
            echo "image_exists=true" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker image
        if: env.image_exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: ${{ env.PLATFORM }}
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            LIDARR_VERSION=${{ env.LIDARR_VERSION }}
            VERSION=${{ env.LIDARR_VERSION }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.ARCH_TAG }}-${{ env.LIDARR_VERSION }}
            ${{ env.IMAGE_NAME }}:${{ env.ARCH_TAG }}-latest

      - name: Send Discord notification on success
        if: env.image_exists == 'false'
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"content": "New Lidarr image version '${{ env.LIDARR_VERSION }}' has been built and pushed to Docker Hub."}' ${{ secrets.DISCORD_WEBHOOK }}

      - name: Send Discord notification on failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"content": "Build failed for Lidarr image version '${{ env.LIDARR_VERSION }}'. Please check the build logs."}' ${{ secrets.DISCORD_WEBHOOK }}
